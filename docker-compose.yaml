services:
  crafty-service:
    build:
      context: ./crafty-service
      dockerfile: Dockerfile
    environment:
      APP_ENV: ${APP_ENV}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DATABASE_URL: mysql+pymysql://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}
    ports:
      - "4000:4000"
    depends_on:
      - db
    entrypoint: ["wait-for-it", "db:${DB_PORT}", "--", "poetry", "run", "crafty"]
    networks:
      - crafty_network
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.crafty-service.rule=Host(`crafty-service.example.com`)"
      - "traefik.http.routers.crafty-service.entrypoints=https"
      - "traefik.http.routers.crafty-service.tls.certresolver=letsencrypt"
      - "traefik.http.routers.crafty-service.service=crafty-service@docker"
      - "traefik.http.services.crafty-service.loadbalancer.server.port=4000"

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - crafty_network
      - traefik
    volumes:
      - db_data:/var/lib/mysql

  crafty-ui:
    build:
      context: ./crafty-ui
      dockerfile: Dockerfile
      args:
        SKIP_SUBMODULES: "true"
    ports:
      - "8008:80"
    networks:
      - crafty_network
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.crafty-ui.rule=Host(`crafty-ui.example.com`)"
      - "traefik.http.routers.crafty-ui.entrypoints=https"
      - "traefik.http.routers.crafty-ui.tls.certresolver=letsencrypt"
      - "traefik.http.routers.crafty-ui.service=crafty-ui-service@docker"
      - "traefik.http.services.crafty-ui-service.loadbalancer.server.port=80"

networks:
  crafty_network:
    driver: bridge
  traefik:
    external: true

volumes:
  db_data:
